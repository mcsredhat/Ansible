---
- name: Configure the server as Apache web server (localhost:)
  hosts: node1
  become: yes

  handlers:
    - name: restart services
      service:
        name: "{{ item }}"
        state: restarted
      loop:
        - httpd
        - named

    - name: reload firewall
      firewalld:
        state: reloaded

  vars:
    packages:
      - httpd
      - mod_ssl
      - openssl
      - openssl-devel
      - ca-certificates
      - php
      - php-cli
      - php-mysqlnd
      - php-gd
      - php-curl
      - php-zip
      - php-xml
      - php-mbstring
      - php-soap
      - bind
      - bind-utils
      - unbound

    ports:
      - 80/tcp
      - 443/tcp

    services:
      - http
      - https
      - dns

    se_linux:
      - httpd_can_network_connect
      - httpd_execmem
          - httpd_use_nfs
      - httpd_read_user_content
      - httpd_enable_cgi

  tasks:
    - name: Install Apache webserver and dependencies
      yum:
        name: "{{ item }}"
        state: present
      loop: "{{ packages }}"

    - name: Configure firewall to allow traffic for Apache web server
      firewalld:
        zone: public
        port: "{{ item }}"
        permanent: yes
        state: enabled
      loop: "{{ ports }}"
      notify: reload firewall

    - name: Enable web server services in firewall
      firewalld:
        service: "{{ item }}"
        state: enabled
        permanent: yes
      loop: "{{ services }}"
      notify: restart services

    - name: Set SELinux booleans for Apache
      seboolean:
        name: "{{ item }}"
        state: yes
        persistent: yes
      loop: "{{ se_linux }}"

    - name: Start and enable Apache service
      service:
        name: httpd
        state: started
        enabled: yes

    - name: Create the PHP file
      copy:
        dest: /var/www/html/index.php
        content: |
          <?php
          echo "<center>TESTING PHP PROCESSING</center>";
          ?>
        mode: '0644'
        owner: apache
         group: apache
      notify: restart services

    - name: Test the PHP file with curl using Ansible uri module
      uri:
        url: http://localhost/index.php
        return_content: yes
      register: php_test_response
      ignore_errors: yes
      tags: url_test

    - name: Display PHP test response
      debug:
        var: php_test_response.content